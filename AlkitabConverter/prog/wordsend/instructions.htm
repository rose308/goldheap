<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>Instructions</title>
</head>


<body>


<p><a href="downloads.htm">Previous page</a></p>

<h1><a name="instructions">WordSend Instructions</a></h1>

<p>When you install WordSend, you install two programs: usfm2word.exe and 
sf2word.exe. The first one is a Windows UI program. The second one is a command 
line program good for including in batch files. Run sf2word.exe for the syntax 
of that program.</p>

<p>In usfm2word.exe, you simply fill in the tabbed dialog data with your 
preferences, and then on the &ldquo;Go!&rdquo; page, select &ldquo;Convert now!&rdquo;. There are many 
options that can be set, but with the exception of specifying the input USFM 
files, you can accept defaults for everything and get reasonable results. (If 
you don't like the results, just go back and change the options that affect what 
you got or edit the seed file.)</p>

<p>You may optionally use a command line argument with usfm2word.exe. The only 
command line argument read is the first one, and it is taken to be the file name 
of the job options (.xini) file to use. This command line option is useful for 
calling usfm2word from another program or batch file, where the other program 
may set up options in advance in a job options file, then present you with the 
normal tabbed dialog box for you to review and change or accept the settings, 
then run the conversion.</p>

<h2><a name="options">Options Files</a></h2>

<p>Options files are just small XML files with a .xini suffix that contain the 
settings you select on the other tabs. It is good practice to keep the options 
file for a project with the project to make it easier to re-run the program. If 
you don&rsquo;t specify an option file, that is OK. WordSend will just reuse whichever one 
you used last, or a default one if this is the first time you ran the program. 
These options files are arranged such that if you use an older options file with 
a newer version of WordSend that has more options, WordSend will just use default values 
for the new options.</p>

<h2><a name="usfm">USFM Files</a></h2>

<p>This is a list of all of the USFM files that you want to include in the 
conversion to WordML. They should all be from the same Bible in the same 
language. You can read them directly from the directory that Paratext stores 
them in, if you like. WordSend is not picky about file naming conventions. It uses 
the \id and \c tags to sort the files into the correct order in memory after it 
reads them.</p>

<h2><a name="merge">Merge</a></h2>

<p>USFM supports insertion of crossreference notes using the \x tag in the 
Scripture source text, and so does WordSend. However, to save time and avoid 
reinvention of the wheel with each new translation, you may choose to add 
crossreferences from an external XML file that is already written for you. The 
only thing you have to do is edit the &ldquo;target&rdquo; element contents to reflect your 
vernacular Bible book names or abbreviations that you wish to use in the 
crossreference footnotes. It is better to make a copy of the crossreference.xml 
or toomanyxref.xml 
file that is in the program application directory, and save it as something new 
before you edit it, keeping it with the rest of the files associated with your 
current language project. Since these crossreference notes are not placed 
precisely at the beginning or end of a quotation, this approach is only recommended for notes with no callers in the text, 
like the large edition of the Tok Pisin <i>Buk Baibel</i>. (The pocket edition 
of the <i>Buk Baibel</i> has no crossreferences.) Of the two sample 
crossreference lists, crossreference.xml concentrates mostly on quotations of 
the Old Testament in the New Testament and references to fulfilled prophecy. The 
file toomanyxref.xml contains a more complete selection of crossreferences. (The 
file name is my editorial comment, but you are free to disagree with me, of 
course.) You can edit the crossreference XML files in Notepad,
<a href="http://www.altova.com/resources_freetools.html">XML Spy Home Edition</a>, 
or another appropriate editor. (Microsoft Word works, but turn off autocorrect 
options first to avoid introducing errors.) Just change what is between &lt;target&gt; 
and &lt;/target&gt; for each name to be the appropriate target language name or 
abbreviation for each book of the Bible. If you want to adjust which 
crossreferences are used, you may edit them to taste using a structure like the 
sample. Each crossreference note goes between &lt;xref&gt; and &lt;/xref&gt;, with the 
reference between &lt;at&gt; and &lt;/at&gt; and the note between &lt;note&gt; and &lt;/note&gt;.</p>

<p>If you want more precise placement of crossreference footnotes, or if you 
want to use footnote callers with them, then you should insert the \x tags in 
the Scripture source text instead of using this function.</p>

<h2><a name="footnotes">Footnotes</a></h2>

<p dir="ltr">If you want WordSend to insert the chapter and verse that the footnote 
refers to in the beginning of the footnote, check &ldquo;Insert calling verse 
reference at beginning of footnote.&rdquo; If you already have text containing the 
calling verse reference in the footnote text, uncheck this box.</p>

<p>In USFM, it is most convenient and least error-prone to use automatic 
sequence callers for footnotes. (Callers are those little marks that indicate 
that there is a footnote for this point in the text, usually superscript letters 
or symbols like asterisks.) Microsoft Word uses the lower-case English 
alphabet for these, but you can use Roman numerals or Arabic numerals, too. You 
can override that character set, here, with your own language&rsquo;s alphabet or with 
a sequence of symbols to use, or with just a single symbol.</p>

<p>The options for crossreference notes are the same as for regular footnotes. 
You can choose a different caller sequence to differentiate between them. If you 
are merging crossreferences from the supplied external crossreference file, then 
you should check &ldquo;Insert calling verse reference at the beginning of a 
crossreference note.&rdquo; Note that if you check &ldquo;Use custom character set for 
autoincrement crossreference notes&rdquo; and you are using an external crossreference 
file, then the custom character(s) you select will be inserted at the beginning 
of the verse, right after the verse number. If you specify that a custom caller 
is to be used, then leave the caller field blank, no caller will be inserted.</p>

<h2><a name="seed">Seed File</a></h2>

<p>The seed file is a &ldquo;template&rdquo; file, but not a template in the Microsoft Word 
sense of that term, but a regular Microsoft Word document saved in XML format (WordML) 
that contains definitions for all of the styles that can be generated by WordSend. 
The default seed file is the file Scripture.xml that comes with the program. 
There are several other sample seed files that are installed in the program 
application directory. The 
easiest way to customize it to your taste is to open that file (or one of the 
others) in Microsoft 
Word, save it as another file name, then adjust the style settings to meet your 
needs using the normal Microsoft Word Format/Styles and settings sidebar or 
dialog. Make sure you save this file in XML format when you finish editing it in 
Microsoft Word, then select your new template file on this page of the dialog. 
(No, I don&rsquo;t expect you to edit this file manually with notepad or something. 
WordML is very complex, and not designed for manual editing.)</p>

<h2><a name="substitution">Substitution File</a></h2>

<p dir="ltr">On the same tab as the seed file is an optional substitution file. 
This file allows you to specify several simple substitutions (consistent 
changes) that you would like to make to the text every time you export it to 
WordML. It is intended to be used for a few simple substitutions, like changing 
"&lt;&lt; &lt; &gt; &gt;&gt;" to "&ldquo; &lsquo; &rsquo; &rdquo;" and to replace the normal spaces between consecutive 
quotation marks to non-breaking narrow spaces. (Narrow spaces look better there 
than whole spaces or no spaces, and the non-breaking characteristic keeps you 
from starting a new line with an outside ending quotation mark. You could also 
use this facility to substitute ligatures for the letter sequences they 
represent, like &ldquo;&AElig;&rdquo; for &ldquo;AE&rdquo;, or make real em-dashes (&mdash;) out of double dashes 
(--). For a sample substitution file, please see fixquotemarks.xml in the 
installation directory. This file isn&rsquo;t a WordML file, and can be edited with 
Notepad.exe or <a href="http://www.altova.com/resources_freetools.html">XML Spy 
Home Edition</a> if you feel the need to do so. (If you do edit it with Microsoft 
Word, please make sure you save it as &ldquo;data only&rdquo;.) In some cases, you may want 
to substitute for a character that is hard to type or hard to see, or both. In 
those cases, you may specify a character in the form of its Unicode hexadecimal 
code point, U+xxxx, like U+8239 for a narrow non-breaking space. The code must 
start with an upper case U, then a +, then from 1 to 5 hexadecimal digits. WordSend 
thinks it has reached the end of the hexadecimal number when it finds the end of 
the text field, a character that isn&rsquo;t a valid hexadecimal digit, or it has 
already found 5 hexadecimal digits.</p>

<h2><a name="chapter">Chapter &amp; Verse</a></h2>

<p dir="ltr">Chapters may be marked with a heading like &ldquo;Chapter 5&rdquo; or with a 
drop-cap style number. If you select chapter headings, you need to specify the 
word for &ldquo;Chapter&rdquo; in your target language.</p>

<p dir="ltr">You have the option of not explicitly marking chapter 1 and/or 
verse 1, if you so choose. Not marking these may make for a cleaner layout, but 
may be more confusing to beginning readers of the Bible. Verse one markers are 
redundant, except in the Psalms, because they always come right after a new 
chapter starts, except for when there is a Hebrew Psalm title there. Likewise, 
chapter one markers are redundant, because they always come right after a book 
starts. However, if you have introductory material between the start of the book 
and the start of chapter one, you should include a chapter one marker.</p>

<p dir="ltr">Verse numbers may be preceded and followed with custom marks. 
Normally they are superscript bold numbers followed by a non-breaking half 
space, but you could have them normal sized and surrounded with brackets in a 
large print Bible.</p>

<p dir="ltr">The &ldquo;advanced drop cap options&rdquo; on this tab affect drop caps both 
for the Psalms and for all other books.</p>

<p dir="ltr">&ldquo;Suppress indent after drop cap&rdquo; does this by adding manual 
formatting to the first chapter to start after every drop cap style chapter 
number, specifying a first line indent of zero.</p>

<p dir="ltr">If &ldquo;automatic drop cap size&rdquo; is selected, then the measurements 
associated with drop caps are derived from the Normal paragraph style line 
height in the seed file. For best results, use "exact" line spacing instead of 
"single" line spacing in the Normal and Normal-ch paragraph styles. Normal-ch 
should be exactly the same as and based on Normal, except for "first-line 
indent" and "space before." (You could use a different font size for the first 
paragraph of a chapter, but this is normally not done in printed Bibles.) If 
automatic drop cap size is not selected, then those measurements are directly entered in 
the 5 other boxes that are enabled when this checkbox is cleared.</p>

<p dir="ltr">Number of lines to drop is normally 2, but you might want to use 3 
if you want bigger chapter numbers. Using a value of 1 results in something that 
really isn't a drop cap style at all.</p>

<p dir="ltr">&ldquo;Space above drop cap&rdquo; should exactly match the &ldquo;space before&rdquo; 
paragraph property of the Normal-ch style, and indicates the space from the 
bottom of the previous paragraph and the top of the chapter number.</p>

<p dir="ltr">The horizontal distance from text is the space from the chapter 
number bounding box to the text to the right of it. The other three numbers 
interact with the font sizes you choose, and may be better chosen by 
experimenting with a sample WordML document, then seeing what those parameters 
turn out to be in the WordML that you save. (This isn&rsquo;t very user friendly, but 
it is probably faster than just playing with the numbers and seeing what 
Microsoft Word does with them.)</p>

<p dir="ltr">In all of the advanced drop cap option boxes that expect a linear 
measure, you have a choice of entering the measurement in inches, millimeters, 
points, half-points, or twips. (Half-points are a weird unit, retained for 
backward compatibility with the raw units used in the WordML file, but not 
listed on the dialog box itself.) Just include the unit name or abbreviation after 
the number. Only the first letter of the unit is read by the program, so you can 
abbreviate. Case is ignored, i. e. Pts and pts would both be seen as points. 
Note, however, that if you try to use an unsupported unit of measure that 
happens to start with the same letter (like miles, meters, millifurlongs, 
megaleagues, picas, parsecs, hands, or Tom&rsquo;s cubit), WordSend will act like you 
meant one of the supported measurements and give you no error message. (After 
all, you read the label to the right of those boxes and wouldn&rsquo;t do that, 
right?) If you specify a number but no units, or a unit that is not recognized 
(like astronomical units, light years, or rods), the default unit for that box 
will be used. The default unit is, for reasons of backward compatibility with old .xini files, 
is different for each case:<br>

points for space above drop cap,<br>

twips for horizontal distance from text and drop cap 
spacing, and<br>

half-points for drop cap size and position.<br>

I recommend always 
specifying units to avoid confusion. If you specify unexpectedly large or small values, WordSend will 
quietly substitute something less bizarre.</p>

<h2><a name="psalms">Psalms</a></h2>

<p>The chapter and verse marking options for Psalms correspond to the same ones 
for the other books of the Bible on the previous tab. They are separate options, 
because the poetry formatting often used in Psalms and the nature of Psalms as 
individual poems instead of running narrative make it likely that you may want 
to use chapter headings instead of drop caps. It is also likely that you would 
want to use a different word to mark chapters, like &ldquo;Psalm 23&rdquo; instead of 
&ldquo;Chapter 23&rdquo;. Of course, you should fill in the correct word(s) for &ldquo;Psalm&rdquo; in 
the target language. Blanks are provided for inserting your word(s) for Psalm 
before and/or after the number for flexibility in handling various languages.</p>

<h2><a name="output">Output File</a></h2>

<p>This is the name of the WordML file to create and read into Microsoft Word. 
Microsoft Word expects this file to end with .XML or .xml.</p>

<h2><a name="embed">Embed USFX</a></h2>

<p>The "Embed USFX" checkbox enables or disables embedding of USFX XML codes 
along with the WordML XML codes for the purpose of being able to convert back to 
USFM, later. This feature is currently experimental, so enable it at your own 
risk. When USFX codes are embedded, you may reveal or hide them by selecting or 
deselecting the &ldquo;Show XML tags in document&rdquo; checkbox in the &ldquo;XML Structure&rdquo; task 
pane. (Use view/Task Pane or ctrl-F1 to show or hide the task pane, and the pick 
list at the top of the task pane to find the &ldquo;XML Structure&rdquo; task pane.</p>

<h2><a name="extras">Extras</a></h2>

<p>This tab enables or disables the inclusion of printer&rsquo;s crop marks in the 
WordML document. Just select the &ldquo;include crop marks&rdquo; checkbox and enter the cut 
page length and width. The cut page will be assumed to be centered on the paper.</p>

<p>The extras tab contains functions beyond what is needed for basic conversion 
of USFM to WordML. In the current version, the only active function is a button 
that allows you to convert directly from USFM to USFX without mixing the USFX 
tags with WordML. You may optionally specify a namespace for the XML. For 
example, entering "usfx" in this box will cause the tag &lt;usfx:p&gt; to be generated 
instead of just &lt;p&gt;. This conversion function uses the same input and output 
file names as the regular conversion on the next tab (Go!). This feature is not 
necessary or useful for converting from USFM to WordML, but was helpful for me 
in debugging, and may be helpful in converting USFM files to other formats by 
converting to USFX, then using XSLT.</p>

<h2><a name="go">Go!</a></h2>

<p>If you want WordSend to open Microsoft Word with the output file upon completion 
of the conversion, check the box that says so. Pressing &ldquo;Convert to WordML&rdquo; starts 
the process. If Microsoft Word already has the output file open, the conversion 
will fail with a file sharing error, so you should close the file before 
repeating the conversion. Information and error messages scroll in the box below 
the button during the conversion.</p>

<h2><a name="editing">Editing in Microsoft Word</a></h2>

<p>Styles indicated by backslash codes in USFM are converted to corresponding 
paragraph or character styles in Microsoft Word. You can adjust the typography 
using the Tools/Styles and formatting sidebar in Microsoft Word. At this point, 
consult the Microsoft Word documentation for help.</p>

<h2><a name="pictures">Painless Picture Insertion</a></h2>

<p>WordSend does not insert pictures based on \fig ... \fig* markers,
but it places the fields of that specification in text marked with
character styles like Figure Filename for the file name and Figure
Caption for the caption text. It is up to you to find those instances
and place the picture, either manually or using a macro.</p>
<p>I will try not to repeat here what Microsoft has already written in the help 
files for Microsoft Office Word 2003. However, in the case of picture placement, 
it really isn&rsquo;t obvious to most people (including me, before I started doing 
this) how to best place pictures. There is more than one way to do it. The way I 
like to do it goes something like this:</p>

<ol>

 <li>Assemble a list of every picture to be inserted, arranged in canonical 
 order by Scripture reference, including the picture file name and caption. The 
 Scripture reference may be one specific verse, or a range of verses where the 
 story that the picture illustrates is told. This list should be finished before 
 you start the next step, at least for the book of the Bible you are working on.</li>

 <li>Set the document grid to be fine enough to allow you to use the mouse to 
 position an object precisely on the column boundary, if desired. (This step is 
 optional, but it makes things easier.) To do that, display the drawing toolbar, 
 then on that toolbar select Draw/Grid... and fill in the grid size you like. (I 
 use 1 mm or 0.5 mm.)</li>

 <li>Place the insertion point within the verse where the first picture is to be 
 inserted or in the next paragraph below it. Place a text box on the page where you want the picture and caption 
 to be. Note that it is not always possible to put the picture on the same page 
 as the exact verse it refers to if the verse is on the last part of the page, 
 unless you want wasted white space (or another picture) on the page before the picture, but you can 
 generally get it close or on an opposing page.</li>

 <li>
 
    <p dir="ltr">Format the text box (select it and select Format/Text Box... from 
 the menu) the way you want it. Some of the settings (like on the Colors and 
 Lines tab) depend on how you want the box to work, i. e. with a line around it 
 or not. On the Layout tab, select &ldquo;square&rdquo; then press the &ldquo;Advanced&rdquo; button. On 
 the Advanced Layout &ldquo;Picture Position&rdquo; tab, I recommend selecting absolute 
 positioning relative to the page for both horizontal and vertical. Positioning 
 relative to text elements can tend to cause some possibly unexpected 
 repositioning of the text box. Uncheck the &ldquo;Allow overlap&rdquo; box. The Text 
 wrapping tab should be set to &ldquo;Square.&rdquo; Set the rest of the options to fit your 
 design.</p>
  </li>

 <li>
 
    <p dir="ltr">Set the paragraph style inside the text box to &ldquo;Picture Caption&rdquo; 
 style&mdash; a style that has centered text, no first line indent, and, most 
 important of all, single line spacing (not &ldquo;exact&rdquo; line spacing), and press 
 &ldquo;Enter&rdquo; to create a second paragraph in the text box.</p>
  </li>

 <li>
 
    <p dir="ltr">Once you have done step 4 and 5 a time or two, you may think there 
 is a less tedious way. There is. Record a macro to do it, assign the macro to a 
 key you don&rsquo;t use for other things, and just press that one key after inserting 
 a new text box.</p>
  </li>

 <li>
 
    <p dir="ltr">With the insertion point on the second paragraph, type or paste in 
 the picture caption.</p>
  </li>

 <li>
 
    <p dir="ltr">Place the insertion point on the first paragraph in the text box 
 and insert the picture.</p>
  </li>

 <li>
 
    <p dir="ltr">Adjust the size and aspect ratio of the text box and the size of 
 the picture until it looks right. In some cases, you may have to manually move 
 the anchor of the text box to avoid excessive white space on the previous page. 
 Just use the mouse to drag the anchor symbol to a lower paragraph. You may need 
 to lock the anchor there in some cases.</p>
  </li>

 <li>
 
    <p dir="ltr">For each of the rest of the pictures, insert a text box, run the 
 macro, and insert the the correct picture and caption in the text box.</p>
  </li>

</ol>

<p dir="ltr">The above steps are not complete descriptions, but rather clues to 
help you find your way through the correct settings. Please use the Microsoft 
Office Word 2003 help system to fill in the details. It also helps if you play 
with it the picture positioning for a while.</p>

<h2 dir="ltr"><a name="crop">Crop Marks</a></h2>

<p dir="ltr">Some printers like crop marks (usually the ones with more 
traditional, paper-and-film-based processes), and some don&rsquo;t (usually more 
technically up-to-date processes where they can print directly from a PDF file). 
The printers we use for SIL PNG out-of-house printing like crop marks showing 
the cut page size centered on a letter-size page. Microsoft Word can do this 
without too much pain, even though there is no &ldquo;crop marks&rdquo; feature in Microsoft 
Word. There are several creative solutions to this problem, but the easiest one 
is to just select the checkbox on the extras tab in WordSend, and enter the cut 
page size there.</p>

<h2><a name="strategy">Scripture Typesetting Strategy</a></h2>

<p>There is more than one way to do it, but here is a suggested plan that works.</p>

<ol>

 <li>Use Paratext&rsquo;s checking functions and proofread the text carefully to make 
 sure it is ready for typesetting.</li>

 <li>If necessary, change any tags that need to be changed to conform with the 
 USFM standard.</li>

 <li>If necessary, use TECKit to convert the project to Unicode. (If the project 
 is encoded in your normal ANSI code page, you can also use Windows Notepad 
 under Windows XP to do this-- just read the file in, then export it with a 
 &ldquo;Save as&rdquo; UTF-8 Unicode command.</li>

 <li>Make a copy of one of the supplied Scripture &ldquo;seed&rdquo; file WordML documents 
 (like Scripture.xml), saved with a new name, and customize it to your taste in 
 book size, fonts, margins, columns, etc. You can do this iteratively, by taking 
 the output from WordSend, making changes to the style definitions, page layout, 
 etc., then deleting everything but the Table of Contents, and saving it as your 
 new seed file.</li>

 <li>Run usfm2word.exe. Specify a job options (.xini) file to go with this 
 project (maybe saved in the same directory as the template file you saved in 
 step 1).</li>

 <li>Execute the &ldquo;Go&rdquo; function in usfm2word and examine the results. If you get 
 any unexplained error messages or program crashes, double-check all file names, 
 make sure they exist, that output files are writable, and that they aren&rsquo;t 
 locked by other programs such as Microsoft Word.</li>

 <li>Examine the output. Make any adjustments necessary to your template file, 
 source USFM files, and job options, then rerun usfm2word until you like the 
 output.</li>

 <li>Type in the front matter and other peripherals using Microsoft Word in its 
 normal way, and add pictures. It is easiest to add pictures from the beginning 
 of the book to the end. Pictures are easier to place if you place a text box 
 first, then place the picture within it, at least if you want to include 
 captions. Note that it is best to have the text in its final form before 
 placing pictures, as regenerating the Microsoft Word files from USFM files will 
 delete all of the pictures.</li>

 <li>Proofread the results and make any necessary corrections. If there are 
 errors in the Bible text itself, please make the correction BOTH to the input 
 USFM AND in the Word document. (This double-editing requirement may go away 
 once the USFX embedding and conversion back to USFM is working and tested.)</li>

 <li>Print the final results to a PDF file or paper, depending on the 
 requirements of the printing service you use.</li>

</ol>

<p>Of course, WordSend can be used for looking at drafts and village checks, too, 
without being quite as formal, much like the Paratext RTF converter is used.</p>


<h2><a name="gotchas">Gotchas, Known Issues, and Tips</a></h2>

<table id="table1" border="1">

 <tbody>
    <tr>

  <td><b>Issue</b></td>

  <td><b>Work-around</b></td>

  <td><b>Resolution</b></td>

 </tr>

 <tr>

  <td>Diglot functionality is not yet complete.</td>

  <td>Generate two Bible files, one for each language. Manually merge them into 
  a large table by cutting and pasting, one paragraph or stanza per row. (It 
  isn't too painful to do this for a short book of the Bible.)</td>

  <td><font color="#ff0000">Pending.</font></td>

 </tr>

 <tr>

  <td>Microsoft Word&rsquo;s save XML data only function reorders the embedded USFX, 
  putting all footnotes at the end of the document.</td>

  <td>Instead of using this Microsoft Word function, use a extract-usfx.exe.</td>

  <td>Resolved.</td>

 </tr>

 <tr>

  <td>Microsoft Word sometimes does a poor job of aligning combining diacritics.</td>

  <td>There are two work-arounds. If there is a precomposed character using the 
  correct diacritical marks defined, use it instead of the decomposed character. 
  If one doesn't already exist in the Unicode standard, you can create one in 
  the Unicode Private Use Area with a font editor, and go back to the &ldquo;hacked 
  font&rdquo; way of doing things for this character. The conversion from good Unicode 
  representation with bad presentation to bad (PUA) Unicode with good 
  presentation can happen in the WordSend substitution list, so that the source USFM 
  stays in good Unicode. (Risks of using the PUA include risk of inappropriate 
  word breaks and loss of upper/lower case conversion automation.) Another way 
  is to use the {Advance} field code in Microsoft Office Word to move the 
  diacritic to the right place. For example, with a lower case latin "i" with a 
  cedilla, you can replace all instances of i followed by a combining cedilla (i̧) 
  with i{Advance \r 1}combining cedilla{Advance \l 1}, where the things in 
  braces, including the braces, are field codes, not literal text. 
  Unfortunately, you can't do that with the search-and-replace box, because you 
  can't put field codes into the replace with text box, but you can write a 
  macro to do that in Microsoft Word.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>Microsoft Word can crash or become extremely slow with a large document, 
  especially with lots of pictures.</td>

  <td>Split the work up into subdocuments and print with a master document or 
  assemble outside of Microsoft Word using a PDF creator.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>Microsoft Word cannot combine footnotes on one line.</td>

  <td>There really isn't a good workaround for this issue, but you can do 
  some things. It has been noted that changing the font attribute 
  of the end-of-paragraph marker to &ldquo;hidden&rdquo; puts multiple footnotes on one 
  line, but this kludge results in extra blank lines after the footnote.
      <p>Rejoice 
  in the fact that one footnote per line is easier to read and makes finding a 
  particular footnote faster, even if it uses a little more space. If you don't 
  have many crossreferences and footnotes, this is actually a good thing, 
  especially in double-column editions. In other words, you can just accept the 
  way Microsoft Word does things, and be happy.</p>

  
      <p>It is possible to manually edit the first footnote on a page to include the 
  contents of following footnotes, then delete the following footnotes, thus 
  running the footnotes together, BUT if anything happens to cause the text to 
  reflow to break pages differently, this solution fails, since all of the 
  footnotes will follow the page that the first note is marked on, which may not 
  be appropriate for the rest of the notes. If you do this, do it from the front 
  of the document to the end of it, along with picture placement, to minimize 
  text reflows coming from before the point you are editing. (Adding or deleting 
  whole pages before the place you are editing is OK.)</p>
      </td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>If you attempt to start up more than one instance of usfm2word.exe, the 
  second one crashes on startup.</td>

  <td>Don't run more than one instance of usfm2word.exe at once, or upgrade to 
  the version of 1 February 2005 or later.</td>

  <td>Resolved.</td>

 </tr>

 <tr>

  <td>Microsoft Word&rsquo;s reputation for moving pictures around randomly is not 
  entirely without merit.</td>

  <td>Work from the beginning of the document to the end of the document when 
  placing pictures. Sometimes small mouse motions can flip a picture to another 
  page, so you might want to use the position numbers in the picture properties 
  dialog box, instead. In-line pictures may be more predictable in the way they 
  are placed. Make sure all of your margins, text sizes, and page setup are 
  perfect before starting to place pictures.
  <a href="http://wordtips.vitalnews.com/PrintPages/T1419P.html">Allen Wyatt 
  offers some good tips on picture placement</a>. See also <a href="#pictures">
  the section above on painless picture insertion</a>.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>Microsoft Word documents may change in subtle or not-so-subtle ways when 
  moved from one machine to another.</td>

  <td>Ensure that you have the same fonts installed on both computers. Try 
  embedding fonts in the document. Use the same Normal.dot. Use the same printer 
  setup on both computers. Consider transferring files in PDF format.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>WordSend may produce unexpected results or crash with input that is not 
  Unicode or does not conform to the USFM standard.</td>

  <td>Clean up your input. Use TECKit to convert to Unicode. (Or, for ANSI 
  texts, you can just read them into Notepad then save them as UTF-8 Unicode.) 
  Do global search-and-replace operations to change your markup to comply with 
  USFM.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>Microsoft Word may try to autocorrect your text as if it were American 
  English, introducing errors.</td>

  <td>Turn off the autocorrect and autocorrect-as-you-type functions in 
  Microsoft Word and/or mark the text as non-English/do not correct.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>If you update a table of contents field choosing "update page numbers 
  only" you may get an "Error: Bookmark not found!" message or missing entries.</td>

  <td>Update the table of contents field selecting &ldquo;Update entire table.&rdquo; (Put 
  the cursor in the field area or select a section of text including it, then 
  press F9 to update fields.) When doing contents field updates from a macro, 
  Microsoft Word often chooses to update page numbers only, and not regenerate 
  the entire table of contents. This can result in the "Error: Bookmark not 
  found!" message. If you update the table of contents, then delete everything 
  else and save this as your new seed file, then you can skip the &ldquo;Update entire 
  table&rdquo; processing later.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>Changing fonts or type sizes may cause misplacement of the drop cap 
  chapter numbers or missing edges on the numbers.</td>

  <td>Adjust the drop cap size parameters on the chapter &amp; verse page and 
  regenerate the file until the chapter numbers look good.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>Regenerating a file overwrites all work in an existing output file.</td>

  <td>Save as a different name, and cut &amp; paste any changes you may want to save 
  from the old to the new document, or use a master document approach to save 
  things like front &amp; back matter.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>Microsoft Word can seem to lock up when it is just very busy.</td>

  <td>To repaginate, print a to a Postscript file, and wait for Acrobat 
  distiller to create a PDF file of a whole Bible without pictures on my 
  computer takes about 12 minutes of 100% CPU utilization. Relax, enjoy life, go 
  get a drink of water, pray, answer some email, or something while you wait. 
  (Activities that also use the computer will slow down the process a little, 
  but then you will have something to do during that time. Your results will 
  vary due to number and size of pictures in the text, amount of RAM you have (I 
  have 512 Megabytes), your processor speed (mine is about 800 MHz), etc. Just 
  don't kill the process before it is done, or it won't get done.</td>

  <td>Documented.</td>

 </tr>

 <tr>

  <td>If the last verse of a chapter contains markup after the \v tag, and the 
  verse ends after that additional markup on the beginning of a new page, the 
  running headers may not acknowledge the existence of this partial chapter 
  (partial verse, really) on that page.</td>

  <td>In Microsoft Word, place the insertion point at the end of the verse in 
  question and type the number of the chapter it is in. Highlight this number, 
  and mark it as cvmarker character style. This should render it invisible 
  (actually, a very small space) where you typed it, but visible (after fields 
  are refreshed) in the header.</td>

  <td>Documented.</td>

 </tr>

  </tbody>
</table>

<h1><a name="commandline">Command Line Utilities</a></h1>

<p>In addition to the graphical user interface (GUI) version of
WordSend software, some command line utilities are part of the WordSend
project. These can be useful in batch files, as well as handy for
people who are comfortable with the command prompt.</p>

<p>In addition, these command line utilities are an experiment in cross-platform 
programming, targeting Linux and Mac OS X command lines running under Mono, as 
well as Windows XP running under Microsoft dot NET. (Windows NT, 2000, and Vista 
should work, too, but the author only tests under Windows XP.) Traditionally, 
command line switches in the DOS/Windows world start with &ldquo;/&rdquo; and in the Linux 
world, they start with &ldquo;-&rdquo;. These programs accept either. Because it is possible 
to start a file name with a switch character, confusion can result. Don&rsquo;t do 
that. (If for some really bizarre reason you feel a need to name a file &ldquo;-dash&rdquo; 
or &ldquo;/slash&rdquo;, you can rename it to something else long enough to use one of these 
programs with it, then rename it back again.) For a summary of the command 
syntax, just execute the program with no parameters or with -h, /?, or --help on 
the command line.</p>

<p>The command line utilities are installed in the program directory you choose 
for installation in the Windows install. If you just want the command line 
utilities without the GUI programs, you can download 
<a href="http://ebt.cx/wordsend/wordsend-console.zip">wordsend-console.zip</a> and just 
unzip the contents of that file to a suitable new or existing directory. For 
maximum convenience (to avoid typing the complete path to a program every time 
you wish to run it), set your program search path to include the directory where 
these utilities reside. The Windows system path is set for you if you use the 
setup program in wordsend-setup.zip instead of wordsend-console.zip.</p>

<h2>sf2word.exe</h2>

<p>This is program does what the usfm2word.exe GUI program does when you press 
&ldquo;convert now.&rdquo; Options that can be specified in that program can be specified by 
editing the job options file, but it is much easier to create a job options file 
by running usfm2word.exe, setting things the way you want them with the controls 
in that program. Just reference the job options file you created that way.</p>

<p>Syntax:<br>

sf2word [-o Output] [-j JobOptions] [-t Template] [-n] [-?] [-l logname] filespec(s)<br>

&nbsp;Output = output WordML file name<br>

&nbsp;JobOptions = name of XML job options file created with usfm2word.exe.<br>

&nbsp;Template = example WordML document with the required style definitions<br>

&nbsp;-n = don't display copyright and banner information.<br>

&nbsp;-? = cancel previous /n and show this information.<br>

&nbsp;-l = set log file name (default is WordSendLog.txt in the current directory)<br>

&nbsp;filespec = SFM file specification to read<br>

If a JobOptions file is specified, and that file contains the input<br>

file specifications, then filespec(s) need not be specified on the<br>

command line. If filespec(s) or output files are specified on the<br>

command line, then the command line overrides those specifications<br>

in the job options file.<br>

You may use "/" instead of "-" to introduce switches. Do not use "/" or<br>

"-" as the first character of a file name.</p>

<h2>extract-usfx.exe</h2>

<p>The extract-usfx.exe program extracts the USFX markup from a combined WordML 
and USFX XML document. In theory, this utility should not be necessary, as 
Microsoft Word&rsquo;s &ldquo;save as data only&rdquo; function should do this. In practice, that 
function rearranges some of the data, especially in footnotes, so it is much 
better to use this program instead of that function.</p>

<p>Syntax:<br>

sf2word [-l logname] [-h] [-n] [-i] inputfile [-o] outputfile<br>

logname = log file name (default is WordSendLog.txt)<br>

-h = show this information then exit<br>

-n = supress banner<br>

inputfile = Microsoft Word XML file that has embedded USFX<br>

outputfile = name of USFX file to write<br>

The -i and -o need not be specified if inputfile and outputfile are both 
specified, and specified in that order.</p>

<h2>usfm2usfx.exe</h2>

<p>This program simply converts one or more USFM files to one USFX file.</p>

<p>Syntax:<br>

usfm2usfx [-o Output] [-j JobOptions] [-n] [-l logname] [-?] filespec(s)<br>

Output = output USFX file name<br>

JobOptions = name of XML job options file created with usfm2word.exe.<br>

-n = don't display copyright and banner information.<br>

logname = log file name (default is WordSendLog.txt)<br>

-? = cancel previous /n and show this information.<br>

filespec = SFM file specification(s) to read. Wild cards are OK.<br>

If a JobOptions file is specified, and that file contains the input<br>

file specifications, then filespec(s) need not be specified on the<br>

command line. If filespec(s) or output files are specified on the<br>

command line, then the command line overrides those specifications<br>

in the job options file.<br>

You may use / instead of - to introduce switches. Do not use<br>

either of those two characters as the first character of a file name.</p>

<h2>usfx2usfm.exe</h2>

<p>This program converts a USFX file to USFM files, one file per book. (If you 
want one file per chapter, just import the resulting text into a Paratext 
project, specifying that you want one file per chapter, and Paratext will split 
the book files into chapter files for you.)</p>

<p>Syntax:<br>

usfx2usfm [-o Output] [-?] [-l logname] inputfile<br>

Output = output USFM path and file name suffix<br>

default is .sfm<br>

book code will be added, i. e. pdg.sfm -&gt; MATpdg.sfm<br>

and subdir\eng.sfm -&gt; subdir\MATeng.sfm<br>

logname is name of log file to write, default is WordSendLog.txt<br>

-h or -? = show this information.<br>

inputfile = name of USFX file to convert to USFM<br>

File names with embedded spaces must be surrounded by quotes.<br>

You may use / instead of - to introduce switches. Do not use<br>

either of those two characters as the first character of a file name.<br>

&nbsp;</p>

<h2>usfm2word.exe</h2>

<p>This program is not a command line program, but it does accept two command 
line parameters: -l logname to specify the log file name (default is WordSendLog.txt) 
and -j jobfilename or just jobfilename to set the job file name (default is the 
last job file name used).</p>

<p>&nbsp;</p>

<p><a href="support.htm">Next page</a></p>


</body>
</html>
